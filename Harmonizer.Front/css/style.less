@import "mixin.less";
@import "colors.less";
@import "font.less";
@import "material.less";
@import "metronome.less";

.font1() {
	font-family: 'roboto-regular';
}

@import "reset.less";

*,
*:after,
*:before {
	.boxsizing();
}

html {
	-webkit-font-smoothing: antialiased;
	-webkit-text-size-adjust: none;
	-ms-text-size-adjust: none;
}

.hide {
	display: none;
}

#container {
	min-width: 1024px;
	.user-select (none);

	&.visibility {
		opacity: 0.9;
	}
}

#header {
	height: 10vh;
	width: 100%;
	background: @blue_grey_500;

	.burger {
		float: left;
		height: 10vh;
		width: 10vh;
		background: url('@{url}hamburger.svg') center center no-repeat;
		cursor: pointer;
	}

	h1 {
		float: left;
		.font1();
		font-size: 4vh;
		line-height: 10vh;
		color: white;
	}
}

.nav_bar {
	position: fixed;
	top: 0;
	left: 0;
	width: 0;
	height: 100vh;
	background: @white;
	z-index: 1;
	.transition(0.2s);

	&.open {
		width: 240px;
	}

	.nav_content {
		//display: none;
		h1 {
			height: 100px;
			.font1();
			font-size: 30px;
			text-align: center;
			color: @white;
			line-height: 100px;
			cursor: pointer;
			background: @blue_grey_100;
		}

		ul {
			border-bottom: 1px solid @blue_grey_100;

			li {
				height: 60px;
				text-align: center;
				border-top: 1px solid @blue_grey_100;

				a {
					display: block;
					.font1();
					font-size: 16px;
					color: @blue_grey_100;
					text-decoration: none;
					line-height: 60px;

					&:hover {
						background: @blue_grey_100;
						color: @white;
					}
				}
			}
		}
	}
}


.loader {
	background: @blue_grey_900;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
	align-content: center;
	align-items: center;
	position: absolute;
	height: 100%;
	width: 100%;

	.loadingMessage {
		.font1();
		color: @white;
		text-align: center;
	}

	.loadingError {
		.font1();
		color: red;
		text-align: center;
	}

	&.ng-hide {
		opacity: 0;
	}

	&.ng-hide-add.ng-hide-add-active,
	&.ng-hide-remove.ng-hide-remove-active {
		-webkit-transition: all linear 0.5s;
		transition: all linear 0.5s;
	}
}


#sequencer  {
	display: flex;
	flex-flow: row wrap;
	height: 55vh;
	width: 100%;
	background: @blue_grey_50;
	cursor: default;
}

#metadata {
	width: 100%;
	background: @blue_grey_50;

	input[type=text]{
		background:@blue_grey_50;
		color:white;
		border:none;
		
		&#tb-name{
			height: 1.5em;
			font-size: 3em;
		}
		&#tb-description{
			font-style: italic;
			font-size:small;
		}
	}
}

@baseChordWidth: 23vw;
@baseChordHeight: 150px;
@chordBorderWidth: 5px;
.chordBlock {
	height: @baseChordHeight;
	width: @baseChordWidth;
	perspective: 1000;
	.font1();
	color: @blue_grey_500;
	line-height: @baseChordHeight;
	text-align: center;
	margin:1vh 1vw;

	&.flipped {
		.flipper {
			transform: rotateY(180deg);
		}
	}

	.flipper {
		position: relative;
		transform-origin: 50% 50%;
		transition: 0.2s;
		transform-style: preserve-3d;

		.front, .back {
			width: @baseChordWidth;
			background: @blue_grey_100;
			height: @baseChordHeight;
			//border: 5px solid @blue_grey_50;
			backface-visibility: hidden;
			position: absolute;
			top: 0;
			left: 0;
		}

		.front {
			z-index: 2;
			font-size: @baseChordHeight * 0.7;
			line-height: @baseChordHeight;
			.out();
			
			&:hover {
				.hover();
			}
		}

		.back {
			transform: rotateY(180deg);
			.flex-display(flex);
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: center;
			align-content: stretch;
			align-items: stretch;

			a {
				flex-grow: 1;
				background: @blue_grey_100;
				text-decoration: none;
				border: 1px solid @blue_grey_100;
				color: white;

				/*&:hover {
					background: @blue_grey_100;
				}*/
			}

			.chordType {
				flex-grow: 1;

				a {
					height: @baseChordHeight - 2*@chordBorderWidth;
					line-height: @baseChordHeight;
					font-size: @baseChordHeight * 0.33;
					//font-size: @baseChordHeight * 0.33;
					display: block;
				}
			}

			.chordCommands {
				width: 310px;
				display: flex;
				flex-wrap: wrap;

				a {
					height: (@baseChordHeight - 2*@chordBorderWidth) / 2;
					line-height: (@baseChordHeight - 2*@chordBorderWidth) / 2;
					font-size: 6vh;
					width: 33%;

					&.saveButton {
						color: @green_200;
					}

					&.removeButton {
						color: @red_200;
					}
				}
			}
		}
	}

	span {
		font-size: 20px;
	}
	/*#region durations styles */
	&.duration_2 {
		width: 2*@baseChordWidth;

		.front, .back {
			width: 2*@baseChordWidth;
		}
	}

	&.duration_4 {
		width: 4*@baseChordWidth;

		.front, .back {
			width: 4*@baseChordWidth;
		}
	}
	/*#endregion */
	/*#region animations */
	&.ng-enter,
	&.ng-leave {
		-webkit-transition: 0.3s linear all;
		transition: 0.3s linear opacity;
	}

	&.ng-enter,
	&.ng-leave.ng-leave-active {
		opacity: 0;
	}

	&.ng-leave,
	&.ng-enter.ng-enter-active {
		opacity: 1;
	}
	/*#endregion */
	&.isSelected {
		.flipper .back .chordType a {
			color: @blue_grey_100;
			background: @white;
		}
	}
}

#options {
	.flex-display(flex);
	padding: 1vh 0;
	height: 30vh;
	width: 100%;
	background: @blue_grey_50;

	section {
		.flex(1);

		input[type=button] {
			outline: none;
			border: 0;
			cursor: pointer;
		}

		&.controls {
			padding: 7vh 0;

			input[type=button] {
				margin-left: 5vw;
				width: 15vh;
				height: 15vh;

				&.play {
					background: url('@{url}play.png') no-repeat;
					background-size: 15vh;
				}

				&.stop {
					background: url('@{url}stop.png') no-repeat;
					background-size: 15vh;
				}
			}
		}

		&.multi_select {
			select {
				display: block;
				margin: 0 auto 0.25vh auto;
				width: 60%;
				height: 7vh;
				text-align: center;
				color: @black_text;
				.font1();
				font-size: 2.5vh;
				background: @blue_grey_200;
				text-indent: 2vh;
				cursor: pointer;

				&:hover {
					color: @black_text;
					background: @blue_grey_300;
				}
			}
		}

		&.actions {

			.metro_block {
				float: left;
				padding: 11vh 0;

				.metronome {
					padding: 0 2vh;
					height: 7vh;
					.font1();
					font-size: 2.5vh;
					line-height: 7vh;
					color: @blue_grey_100;
					border: 1px solid @blue_grey_100;
					cursor: pointer;

					&.checked {
						color: @white;
						background: @blue_grey_100;
						border: 1px solid @blue_grey_800;
						cursor: pointer;
					}
				}
			}


			.insert {
				float: right;
				height: 29vh;
				width: 50%;
				.font1();
				font-size: 30vh;
				color: @blue_grey_100;
				background: @blue_grey_800;
				line-height: 30vh;

				&:hover {
					color: @white;
					background: @blue_grey_100;
				}
			}
		}
	}
}